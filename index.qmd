---
title: "TRAP"
subtitle: "A Novel Road-level Spatial Interpolation to Improve Estimation Errors of Air Pollution"
date: 2022-04-19
date-format: "MMM D, YYYY"
author: "Hyesop Shin<br/>University of Glasgow"
format:
  revealjs: 
    theme: moon
    incremental: false 
    slide-number: true
    preview-links: auto
    css: styles.css
    logo: images/MRC_CSO_SPHSU_Glasgow_RGB.png
---


## Air Pollution Modelling { .scrollable}
What we want


![](images/no2_london.png){.absolute top="150" left="150" width="800" height="600"}
<br><br><br><br><br><br><br><br><br><br><br><br>

What we get

<br><br><br><br>



* **Atmospheric Dispersion Models**
   - Mathematical assumptions about <br>the way that the atmosphere behaves
   - To estimate emission impact
   - CALPUFF, AERMOD, ADMS
   - Pros: Consider Meterological Impact
   - Cons: Long execution, Only provides Annual Mean (time agg.)

<br><br>

* **Geostatistical Models**
   - Kriging, IDW, Spline, LUR
   - Passive Modelling
   - Pros: Advantages of a mathematically sound concept, quick implementation speed, and useful software
   - Cons: 



## Study Objective

- To create a air pollution package that anyone can quickly produce a pollution map

<p style="font-size:45px;text-align:center;margin-top: 1em;">
↙ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;↘
</p>


:::: {.columns style="margin-top: 1em"}
::: {.column width="40%"}
To examine small-scale variations that occur during SI prediction 
:::

::: {.column width="20%"}

:::

::: {.column width="40%"}
To introduce a new road-scale spatial interpolation method that employs road weighting
:::
::::

## The Roadmap

* Data Collection: station (background, road) <br> `get_london`, `get_seoul`
* Semivariogram & Krige: `gstat`
* Add road weight: `add_weight`


## Modelling Universal Kriging {.smaller .scrollable}
* Considering Small-scale Variability is needed 

```{.r}
myVario <- variogram(df$var ~ 1, df, cutoff = 30000, width = 3000)
myFit <- 
  fit.variogram(myVario, 
  vgm(psill = 160,
      nugget= 10,
      model="Ste",
      kappa = 50),
      fit.kappa = TRUE, 
      fit.method = 6)

plot(myVario, myFit, main = "Feb 15th\nDay hours")      
```
![](images/semivariogram.jpg)

<br><br><br><br>

* 코드 더하기
```{.r}
kriging <- krige(df ~ X + Y, df, London_Grid, model = myVario) # Example
# For Time series Kriging, You can `lapply` or `for loop` to execute the semivariogram and prediction 

kriging |> 
  pivot_longer(!c(X, Y), names_to = "Hour", values_to = "NO2") |>
  ggplot() +
  geom_tile(aes(x = X, y = Y, fill = NO2)) +
  scale_fill_distiller(palette = "Spectral", na.value = NA, limits = c(10,70), breaks = c(20,40,60)) +
  geom_contour(aes(x = X, y = Y, z = NO2),bins = 30, colour = "grey40", alpha = 0.7) +
  geom_path(data = seoul, aes(x = long, y = lat), color = 'black', size = 1) +
  geom_text(data = stat, aes(-Inf, -Inf, label = paste0("mean = " , mean)), hjust = -.1, vjust = -2, size = 3.5) +
  geom_text(data = stat, aes(-Inf, -Inf, label = paste0("sd = " , sd)), hjust = -.15, vjust = -1, size = 3.5) +
  #geom_text(data = stat, aes(-Inf, Inf, label = paste0("RMSE=" , rmse)), hjust = -.1, vjust = 1.2, size = 3.5) +
  facet_wrap(~ Hour, ncol = 8) +
  theme_bw() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.text.y=element_blank(),
        axis.title.y=element_blank(),
        strip.text.x = element_text(size = 20),
        legend.title=element_text(size=15), 
        legend.text=element_text(size=15)                                  
  )


```





![](images/no2_pred.jpg)

## Adding Road Weight { .scrollable}

:::: {.columns style="margin-top: 1em"}
::: {.column width="100%" .smaller}
```{.r}
# convert to Raster Bricks
krige <- rasterFromXYZ(pred.model, 
                       crs="+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +
                       x_0=200000 +y_0=500000 +ellps=GRS80 +
                       towgs84=0,0,0,0,0,0,0 +units=m +no_defs",
                       digits=5)

ras_road <- raster("../data/road_10km_re.tif")  # Import raster
res_mgcv <- resample(krige, ras_road, method = "bilinear") # resample 
res_mgcv <- merge(ras_road, res_mgcv) # merge

# assign road
road_01 = road_02 = road_03 = road_04 = road_05 = road_06 = ras.road

# stack raster and remove individual raster files
road.stack <- stack(road_01, road_02, road_03, road_04, road_05, road_06)

# add road ratio values to GAM raster
ratio <- add_no2_ratio

for(i in 1:6){
  #road.stack[[i]] <- road.stack[[i]] * ratio.no2.sum$ratio[i]
  values(road.stack)[values(road.stack[[i]]) == 1] <- ratio$Back.Road.Ratio[i]
  values(road.stack)[values(road.stack[[i]]) == 2] <- ratio$Back.High.Ratio[i]
}

# add no2 and road values
r.poll.rd <- overlay(res.mgcv, road.stack, fun = function(x,y){ifelse(y != 0, x*y, x)})
names(r.poll.rd) <- c("feb15d", "feb15n", "feb16d", "feb16n", "feb17d", "feb17n")

# Switch them to data frame
ras <- xyFromCell(r.poll.rd, 1:ncell(r.poll.rd))
krige.df <- as.data.frame(r.poll.rd) 

ras.krige.df <- data.frame(ras, krige.df) %>% 
  pivot_longer(!c(X, Y), names_to = "Hour", values_to = "NO2") |> 
  ggplot() +
  geom_tile(aes(x = x, y = y, fill = NO2)) +
  scale_fill_distiller(palette = "Spectral", na.value = NA, limits = c(10,100), breaks = c(0,25,50,75,100)) +
  geom_text(data = stat1, aes(-Inf, -Inf, label = paste0("mean = " , mean)), hjust = -.1, vjust = -2, size = 3.5) + 
  geom_text(data = stat1, aes(-Inf, -Inf, label = paste0("sd = " , sd)), hjust = -.1, vjust = -1, size = 3.5) + 
  geom_path(data = seoul, aes(x = long, y = lat), color = 'black', size = 1) +
  facet_wrap(~ Hour, ncol = 8) +
  theme_bw() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.text.y=element_blank(),
        axis.title.y=element_blank(),
        strip.text.x = element_text(size = 20),
        legend.title=element_text(size=15), 
        legend.text=element_text(size=15)                                  
  )

```
:::

::: {.column width="100%"}
![](images/no2_road.jpg)
:::
::::

## Comparison

![](images/no2_london.png){.absolute top="150" left="0" width="400" height="320"}


## Conclusion

